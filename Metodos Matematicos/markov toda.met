#Ejemplo: la lista da esta probabilidad
#		a      v    r
#	a   2/6   2/6   2/6
#	v   2/5   2/5   1/5
#	r   2/5   1/5   2/5

library("markovchain")
estados <- c("AMARILLO", "VERDE")
sequence <- c("AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO", "VERDE", "VERDE", "VERDE", "VERDE", "VERDE", "VERDE", "VERDE", "VERDE", "VERDE", "VERDE", "VERDE", "VERDE", "VERDE", "VERDE", "VERDE", "AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO", "AMARILLO" )

getColor <- function(color){
	if(color == "AMARILLO"){
		return (1)
	}else { 
		if (color == "VERDE"){
			return (2)
		}
	}
	return (-1)
}

inicializar <- function(mat,fila,col){

	for(i in (1:fila)){
		for(j in (1:col)){
		 mat[i,j] = 0
		}
	}
	return (mat)
}

matrizTransicion <- function(sequence) {
	mat <- matrix(, nrow =2, ncol = 2)
	mat <- inicializar(mat,2,2)
	
	for(i in (1:length(sequence))) {
		actual <- sequence[i]
		if( i > 1){
			ant <- sequence[i-1]
			if(getColor(actual) > 0 && getColor(ant) > 0) {
				aux <- mat[getColor(ant),getColor(actual)]
				
				mat[getColor(ant),getColor(actual)] <- aux+1
			}
		}

	}
	return (mat)
}

matrizProbabilidad <- function(mat){
	matProb <- matrix(, nrow = 2, ncol = 2)
	total <- rowSums(mat)
	matProb <- mat / total[row(mat)]
	
	return (matProb)
}

mat <- matrizTransicion(sequence)
matProb <- matrizProbabilidad(mat)

markovB <- new("markovchain",states = estados,transitionMatrix=matProb, byrow = TRUE) 
SV <- steadyStates(markovB)